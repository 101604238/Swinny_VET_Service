/*
Deployment script for 101604238SwinnyVetService

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar LoadTestData "true"
:setvar DatabaseName "101604238SwinnyVetService"
:setvar DefaultFilePrefix "101604238SwinnyVetService"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
PRINT N'Creating [dbo].[Owner]...';


GO
CREATE TABLE [dbo].[Owner] (
    [OwnerID]          INT           NOT NULL,
    [OwnerFName]       NVARCHAR (50) NOT NULL,
    [OwnerLName]       NVARCHAR (50) NOT NULL,
    [OwnerPhoneNumber] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([OwnerID] ASC)
);


GO
PRINT N'Creating [dbo].[Pet]...';


GO
CREATE TABLE [dbo].[Pet] (
    [PetName] NVARCHAR (50) NOT NULL,
    [PetType] NVARCHAR (30) NOT NULL,
    [OwnerID] INT           NOT NULL,
    CONSTRAINT [Pk_Pet] PRIMARY KEY CLUSTERED ([PetName] ASC, [OwnerID] ASC)
);


GO
PRINT N'Creating [dbo].[Procedure]...';


GO
CREATE TABLE [dbo].[Procedure] (
    [ProcedureID]          INT            NOT NULL,
    [ProcedureDescription] NVARCHAR (200) NOT NULL,
    [ProcedurePrice]       INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([ProcedureID] ASC)
);


GO
PRINT N'Creating [dbo].[Treatment]...';


GO
CREATE TABLE [dbo].[Treatment] (
    [PetName]        NVARCHAR (50)  NOT NULL,
    [OwnerID]        INT            NOT NULL,
    [ProcedureID]    INT            NOT NULL,
    [TreatmentDate]  NVARCHAR (10)  NOT NULL,
    [TreatmentNotes] NVARCHAR (200) NOT NULL,
    [TreatmentPrice] INT            NOT NULL,
    CONSTRAINT [PK_Treatment] PRIMARY KEY CLUSTERED ([PetName] ASC, [OwnerID] ASC, [ProcedureID] ASC)
);


GO
PRINT N'Creating [dbo].[Fk_OwnerID]...';


GO
ALTER TABLE [dbo].[Pet] WITH NOCHECK
    ADD CONSTRAINT [Fk_OwnerID] FOREIGN KEY ([OwnerID]) REFERENCES [dbo].[Owner] ([OwnerID]);


GO
PRINT N'Creating [dbo].[FK_Treatment_PetName]...';


GO
ALTER TABLE [dbo].[Treatment] WITH NOCHECK
    ADD CONSTRAINT [FK_Treatment_PetName] FOREIGN KEY ([PetName], [OwnerID]) REFERENCES [dbo].[Pet] ([PetName], [OwnerID]);


GO
PRINT N'Creating [dbo].[FK_Treatment_ProcedureID]...';


GO
ALTER TABLE [dbo].[Treatment] WITH NOCHECK
    ADD CONSTRAINT [FK_Treatment_ProcedureID] FOREIGN KEY ([ProcedureID]) REFERENCES [dbo].[Procedure] ([ProcedureID]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF '$(LoadTestData)' = 'true'

BEGIN 

DELETE FROM [Treatment];
DELETE FROM [Procedure];
DELETE FROM [Pet];
DELETE FROM [Owner];

INSERT INTO Owner(OwnerID, OwnerFName, OwnerLName, OwnerPhoneNumber) VALUES
	(1, 'Frank', 'Sinatra', 400111222),
	(2, 'Duke', 'Ellingtion', 400222333),
	(3, 'Ella', 'Fitzgerald', 400333444);

INSERT INTO Pet(PetName, PetType, OwnerID) VALUES
	('Buster', 'Dog', 1),
	('Fluffy', 'Cat', 1),
	('Stew', 'Rabbit', 2),
	('Buster', 'Dog', 3),
	('Pooper', 'Dog', 3);

INSERT INTO [Procedure](ProcedureID, ProcedureDescription, ProcedurePrice) VALUES
	(1, 'Rabies Vaccination', 24),
	(10, 'Examine and Treat Wound', 30),
	(5, 'Heart Worm Test', 25),
	(8, 'Tetnus Vaccination', 17);

INSERT INTO Treatment(PetName, OwnerID, ProcedureID, TreatmentDate, TreatmentNotes, TreatmentPrice) VALUES
	('Buster', 1, 1, '20/6/17', 'Routine Vaccination', 22),
	('Buster', 1, 1, '15/5/18', 'Booster Shot', 24),
	('Fluffy', 1, 1, '20/6/17', 'Wounds sustained in apparent cat fight.', 30),
	('Stew', 1, 1, '20/6/17', 'Wounds sustained during attempt to cook the stew.', 30),
	('Pooper', 1, 1, '20/6/17', 'Routine Test', 25);
	
END;
GO

GO
